on:
  push:
    tags:
      - v1.*
name: Build and release cicd test self-hosted environment

jobs:
  generate-release-notes:
    name: Generate release notes
    runs-on: [self-hosted, macOS]
    steps:
      - name: Generate release notes
        run: |
          curl --location 'https://api.github.com/repos/HoangDuck/ci_server_service_ex/releases' \
          --header 'Accept: application/vnd.github+json' \
          --header 'Authorization: Bearer ${{secrets.RELEASE_TOKEN}}' \
          --header 'X-GitHub-Api-Version: 2022-11-28' \
          --header 'Content-Type: application/json' \
          --data '{
              "tag_name": "${{ github.ref_name }}",
              "generate_release_notes": true
          }'
  set-up:
    name: Set up
    runs-on: [self-hosted, macOS]
    steps:
      - uses: actions/checkout@v4.1.5
      - name: Install flutter version
        run: fvm install
      - name: Use flutter version by fvm
        run: |
          fvm use

  automation-test:
    name: Automation test
    runs-on: [self-hosted, macOS]
    needs: set-up
    steps:
      - name: Run automation test
        run: |
          fvm flutter clean
          fvm flutter pub get
          fvm flutter test

  build-and-release-ios:
    name: Build and release iOS
    runs-on: [self-hosted, macOS]
    needs: automation-test
    steps:
      - run: fvm flutter clean
      - run: fvm flutter pub get

      - name: Pod install
        run: pod install
        working-directory: ios

      - name: bundle install before run fastlane
        run: |
          bundle config set path 'vender/bundle'
          bundle install
        working-directory: ios

      - name: Distribute app to Firebase
        run: bundle exec fastlane release_to_firebase_distribution
        env:
          FIREBASE_CLI_TOKEN: ${{secrets.FIREBASE_CLI_TOKEN}}
        working-directory: ios

  build-and-release-android:
    name: Build and release Android
    runs-on: [self-hosted, macOS]
    needs: automation-test
    steps:
      - run: fvm flutter clean
      - run: fvm flutter pub get

      - name: build apk
        run: fvm flutter build apk --split-per-abi

      - name: bundle install before run fastlane
        run: |
          bundle config set path 'vender/bundle'
          bundle install
        working-directory: android

      - name: Distribute app to Firebase
        run: bundle exec fastlane release_to_firebase_distribution
        env:
          FIREBASE_CLI_TOKEN: ${{secrets.FIREBASE_CLI_TOKEN}}
        working-directory: android
